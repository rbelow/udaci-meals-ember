{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","udaci-meals-ember/tests/app.lint-test.js","udaci-meals-ember/tests/helpers/destroy-app.js","udaci-meals-ember/tests/helpers/module-for-acceptance.js","udaci-meals-ember/tests/helpers/resolver.js","udaci-meals-ember/tests/helpers/start-app.js","udaci-meals-ember/tests/integration/components/menu-item-test.js","udaci-meals-ember/tests/integration/components/order-tracker-test.js","udaci-meals-ember/tests/test-helper.js","udaci-meals-ember/tests/tests.lint-test.js","udaci-meals-ember/tests/unit/routes/item-test.js","udaci-meals-ember/tests/unit/routes/item/nutrition-test.js","udaci-meals-ember/tests/unit/routes/menu-test.js","udaci-meals-ember/tests/unit/services/order-manager-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('udaci-meals-ember/tests/app.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/menu-item.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/menu-item.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/order-tracker.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/order-tracker.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/item.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/item.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/item/nutrition.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/item/nutrition.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/menu.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/menu.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('services/order-manager.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/order-manager.js should pass ESLint\\n\\n');\n  });\n});","define('udaci-meals-ember/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('udaci-meals-ember/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'udaci-meals-ember/tests/helpers/start-app', 'udaci-meals-ember/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _udaciMealsEmberTestsHelpersStartApp, _udaciMealsEmberTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _udaciMealsEmberTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _udaciMealsEmberTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('udaci-meals-ember/tests/helpers/resolver', ['exports', 'udaci-meals-ember/resolver', 'udaci-meals-ember/config/environment'], function (exports, _udaciMealsEmberResolver, _udaciMealsEmberConfigEnvironment) {\n\n  var resolver = _udaciMealsEmberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _udaciMealsEmberConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _udaciMealsEmberConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('udaci-meals-ember/tests/helpers/start-app', ['exports', 'ember', 'udaci-meals-ember/app', 'udaci-meals-ember/config/environment'], function (exports, _ember, _udaciMealsEmberApp, _udaciMealsEmberConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var attributes = _ember['default'].merge({}, _udaciMealsEmberConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    return _ember['default'].run(function () {\n      var application = _udaciMealsEmberApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n      return application;\n    });\n  }\n});","define('udaci-meals-ember/tests/integration/components/menu-item-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('menu-item', 'Integration | Component | menu item', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'Jj9SX8IS',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"menu-item\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '8jex9oRT',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"menu-item\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('udaci-meals-ember/tests/integration/components/order-tracker-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('order-tracker', 'Integration | Component | order tracker', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'xlObb3+a',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"order-tracker\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'WJxxF+lY',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"order-tracker\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('udaci-meals-ember/tests/test-helper', ['exports', 'udaci-meals-ember/tests/helpers/resolver', 'ember-qunit'], function (exports, _udaciMealsEmberTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_udaciMealsEmberTestsHelpersResolver['default']);\n});","define('udaci-meals-ember/tests/tests.lint-test', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('helpers/destroy-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/module-for-acceptance.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('helpers/start-app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/menu-item-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/menu-item-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/order-tracker-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/order-tracker-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/item-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/item-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/item/nutrition-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/item/nutrition-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/menu-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/menu-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/services/order-manager-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/services/order-manager-test.js should pass ESLint\\n\\n');\n  });\n});","define('udaci-meals-ember/tests/unit/routes/item-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:item', 'Unit | Route | item', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('udaci-meals-ember/tests/unit/routes/item/nutrition-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:item/nutrition', 'Unit | Route | item/nutrition', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('udaci-meals-ember/tests/unit/routes/menu-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:menu', 'Unit | Route | menu', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('udaci-meals-ember/tests/unit/services/order-manager-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:order-manager', 'Unit | Service | order manager', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","require('udaci-meals-ember/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;","file":"tests.js"}